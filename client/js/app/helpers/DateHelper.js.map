{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","reverse","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAa;AAAA;;AAET,0BAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN,CAFS,CAE8C;AAC1D;;;;kDACoBC,I,EAAK;;AAEtB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAgB,CAA5C,UAAiDF,KAAKG,WAAL,EAAjD;AACH;;;kDAEoBC,K,EAAM;AACvB,4BAAG,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAJ,EACI,MAAM,IAAIL,KAAJ,CAAU,kCAAV,CAAN;AACJ,kEAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAA/B,CAAnB;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor(){\r\n\r\n        throw new Error('DateHelper nao pode ser instanciada') //Envia um erro caso seja feita instancia da classe\r\n    }\r\n    static dataParaTexto(data){\r\n\r\n        return `${data.getDate()}/${data.getMonth()+1}/${data.getFullYear()}`\r\n    }\r\n\r\n    static textoParaData(texto){\r\n        if(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto)) \r\n            throw new Error('Deve estar no formato dd/mm/aaaa');\r\n        return new Date(...texto.split('/').reverse().map((item, indice) => item - indice % 2));\r\n    }\r\n}"]}