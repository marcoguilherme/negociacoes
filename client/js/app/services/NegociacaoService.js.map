{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["Negociacao","HttpService","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","Promise","resolve","reject","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","error","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","Error","erro","negociacao","getConnection","conexao","dao","adiciona","listaTodos","connection","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negocicao","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { Negociacao } from '../models/Negociacao';\r\nimport { HttpService } from './HttpService';\r\nimport { ConnectionFactory } from './ConnectionFactory';\r\nimport { NegociacaoDao } from '../dao/NegociacaoDao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor(){\r\n       this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    console.log(negociacoes);\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    reject('Não foi possível obter as negociações da semana.');\r\n                })\r\n        })\r\n    }\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    console.log(negociacoes);\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    reject('Não foi possível obter as negociações da semana anterior');\r\n                })\r\n        })\r\n    }\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    console.log(negociacoes);\r\n                    resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    reject('Não foi possível obter as negociações da semana retrasada');\r\n                })\r\n        })\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor ));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação cadastrada com sucesso')\r\n            .catch(erro => {\r\n                throw new Error(\"Não foi possível adicionar a negociação\")\r\n            });\r\n    }\r\n    lista(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(conexao => new NegociacaoDao(conexao))\r\n            .then(dao => dao.listaTodos())\r\n    }\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negocicao =>\r\n                    !listaAtual.some(negociacaoExistente =>\r\n                        JSON.stringify(negocicao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(()=> {throw new Error(\"Nao foi possivel importar negociacoes\")})\r\n    }\r\n    \r\n}"]}